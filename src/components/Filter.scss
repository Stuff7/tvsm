.Input {
  --input-bg: var(--color-dark-2);
  display: grid;
  grid-template-columns: auto 1fr;
  align-items: center;
  gap: var(--spacing-nm);
  border-radius: var(--radius-nm);
  color: var(--color-light);
  border: 1px dashed transparent;
  padding: var(--spacing-nm) calc(var(--spacing-nm)*1.5);
  position: relative;

  transition: background 250ms, color 250ms, padding 250ms, border 250ms;

  > .placeholder {
    pointer-events: none;
    opacity: 0;
    position: absolute;
    top: var(--spacing-nm);
    left: var(--spacing-nm);
    transition: background 250ms, opacity 250ms, top 250ms;
  }

  > .input-icn {
    opacity: 0.5;
  }

  &:hover, &:has(input:focus) {
    > .input-icn, ::placeholder {
      opacity: 1.0;
    }
  }

  &:has(input:focus) {
    color: var(--color-accent);
    padding-inline: 1em;
    border-color: currentColor;
    background: var(--input-bg);
  }

  > input:not(:placeholder-shown) + .placeholder {
    opacity: 1;
    top: calc(var(--spacing-nm) * -1 - 4px);
    background: var(--input-bg);
  }
}

.Tag-input {
  display: grid;
  grid-template-columns: 1fr auto auto;

  > .g-border {
    border-width: 0;
  }

  > .Input {
    --input-bg: var(--color-dark);
    border-radius: var(--spacing-nm) 0 0 var(--spacing-nm);
    border-right: 0;

    ~ .g-border {
      border-color: transparent;
      border-style: dashed;
      transition: border 250ms;
    }

    &:has(:focus), &:has(:active) {
      ~ .g-border {
        border-color: currentColor;
        border-width: 1px;
      }

      + .g-border {
        border-radius: 0;
        border-inline: 0;

        + .g-border {
          border-radius: 0 var(--spacing-nm) var(--spacing-nm) 0;
          border-left: 0;
        }
      }
    }
  }
}

.Filter-label {
  display: grid;
  grid-auto-flow: row;
  gap: 3.3em;

  .NumberRange {
    --NumberRange-left-color: var(--color-ok);
    margin-inline: var(--spacing-md);
  }
}
