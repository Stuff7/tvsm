{
  "version": 3,
  "sources": ["../../js/sample/index.tsx"],
  "sourcesContent": ["import { ref, watchOnly } from \"~/jsx\";\nimport For from \"~/components/For\";\n\ntype Animal = {\n  name: string,\n  habitat: string,\n  isEndangered: boolean,\n  count: number\n};\n\nconst [animals, setAnimals] = ref<Animal[]>([\n  { name: \"Elephant\", habitat: \"Savannah\", isEndangered: true, count: 0 },\n  { name: \"Tiger\", habitat: \"Forest\", isEndangered: true, count: 0 },\n  { name: \"Panda\", habitat: \"Bamboo Forest\", isEndangered: true, count: 0 },\n  { name: \"Kangaroo\", habitat: \"Grasslands\", isEndangered: false, count: 0 },\n  { name: \"Dolphin\", habitat: \"Ocean\", isEndangered: true, count: 0 },\n  { name: \"Penguin\", habitat: \"Antarctica\", isEndangered: false, count: 0 },\n  { name: \"Giraffe\", habitat: \"Savannah\", isEndangered: false, count: 0 },\n  { name: \"Lion\", habitat: \"Savannah\", isEndangered: true, count: 0 },\n  { name: \"Zebra\", habitat: \"Savannah\", isEndangered: false, count: 0 },\n  { name: \"Koala\", habitat: \"Eucalyptus Forest\", isEndangered: true, count: 0 },\n]);\n\nsetInterval(() => {\n  animals()[0].count++;\n}, 2e3);\n\nwatchOnly([animals], () => console.log(animals()));\n\nfunction removeAnimal(i: number) {\n  setAnimals.byRef(animals => animals.splice(i, 1));\n}\n\nfunction insertAnimal(i: number) {\n  setAnimals.byRef(animals => animals.splice(i + 1, 0, {\n    name: \"Insert\",\n    habitat: \"NewInsert\",\n    isEndangered: true,\n    count: 0,\n  }));\n}\n\nfunction addAnimal() {\n  setAnimals.byRef(animals => animals.push({\n    name: \"Push\",\n    isEndangered: true,\n    count: 0,\n    habitat: \"NewPush\",\n  }));\n}\n\nconst [filtered, setFiltered] = ref([...animals()]);\nconst [nameFilter, setNameFilter] = ref(\"\");\n\nwatchOnly([animals], filterByName);\n\nfunction filterByName() {\n  if (!nameFilter()) {\n    setFiltered([...animals()]);\n    return;\n  }\n\n  setFiltered(animals().filter(a => a.name.includes(nameFilter())));\n}\n\nconst [index, setIndex] = ref(0);\n\ndocument.head.append(<style>{style()}</style>);\ndocument.body.append(\n  <main>\n    <input on:input={e => {\n      setNameFilter(e.currentTarget.value);\n      filterByName();\n    }} />\n    <For each={filtered()} do={(animal, i) => (\n      <div class:row on:click={() => setIndex(i)} >\n        <strong>{i}</strong>\n        <span>\n          <em on:click={() => animal().count++}>{animal().count} {animal().name}{animal().count === 1 ? \"\" : \"s\"} </em>\n          <em>in the {animal().habitat} {animal().count === 1 ? \"is\" : \"are\"} </em>\n          <em>{animal().isEndangered ? \"\" : \"not\"} endangered</em>\n        </span>\n        <button on:click={() => removeAnimal(i)}>Remove</button>\n        <button on:click={() => insertAnimal(i)}>Add</button>\n      </div>\n    )} />\n    <button on:click={addAnimal}>Push</button>\n    <button on:click={() => setAnimals.byRef((animals) => animals.sort((a, b) => a.count - b.count))}>Sort</button>\n    <h1>You've clicked index #{index()}</h1>\n  </main>,\n);\n\nfunction style() {\n  return `\n    :root, body, main {\n      background: #222;\n      color: #fff;\n      font-size: 20px;\n    }\n\n    main {\n      display: grid;\n      gap: 0.2em;\n      padding: 1rem;\n    }\n\n    button {\n      font-size: 1rem;\n    }\n\n    .row {\n      background: #111A;\n      border: 1px solid #AAAA;\n      display: grid;\n      gap: 1em;\n      grid-template-columns: auto 1fr auto auto;\n      align-items: center;\n      padding: 0 1rem;\n      user-select: none;\n    }\n  `;\n}\n"],
  "mappings": "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",
  "names": ["animals"]
}
