{
  "version": 3,
  "sources": ["../js/jsx.ts"],
  "sourcesContent": ["import { cleanup, Running, watch, watchFn } from \"~/signals\";\nimport { EventName } from \"./dom-utils\";\nimport { swapRemove, iterChildrenDeep, iterChildNodesDeep } from \"./utils\";\n\nexport * from \"~/signals\";\n\nexport function template(html: string) {\n  const createNode = () => {\n    const templ = document.createElement(\"template\");\n    templ.innerHTML = html;\n    return templ.content.firstChild!;\n  };\n\n  let node!: Node;\n  return () => (node || (node = createNode())).cloneNode(true);\n}\n\ntype EventHandler = (e: Event) => void;\n\ntype GlobalEvent = {\n  fn: EventHandler,\n  target: Element,\n  once?: boolean,\n};\n\nexport function createGlobalEvent(evName: EventName) {\n  const listeners = [] as GlobalEvent[];\n\n  (evName === \"resize\" || evName === \"hashchange\" ? window : document).addEventListener(evName, (e) => {\n    for (let i = listeners.length - 1; i >= 0; i--) {\n      const l = listeners[i];\n      if (!l.target.isConnected) { continue }\n      l.fn(e);\n      if (l.once) {\n        swapRemove(listeners, i);\n      }\n    }\n  });\n\n  return listeners;\n}\n\nexport function destroyNode(node: Element) {\n  iterChildNodesDeep(node, t => t.dispatchEvent(new CustomEvent(\"destroy\")));\n}\n\nexport function observeTree(observer: MutationObserver, target: Element, isMount: boolean) {\n  queueMicrotask(() => {\n    if (!target.parentNode) { return }\n    observer.observe(target.parentNode, { childList: true, subtree: true });\n    if (isMount) {\n      target.dispatchEvent(new CustomEvent(\"mount\"));\n    }\n  });\n}\n\nexport function createMutationObserver() {\n  return new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type !== \"childList\") { return }\n\n      for (const node of mutation.addedNodes) {\n        queueMicrotask(() => {\n          iterChildrenDeep(node, node => node.dispatchEvent(new CustomEvent(\"mount\")));\n        });\n      }\n      for (const node of mutation.removedNodes) {\n        queueMicrotask(() => {\n          iterChildrenDeep(node, node => node.dispatchEvent(new CustomEvent(\"unmount\")));\n        });\n      }\n    });\n  });\n}\n\nexport function addGlobalEvent(\n  listeners: GlobalEvent[],\n  target: GlobalEvent[\"target\"],\n  value: EventHandler | [EventHandler, AddEventListenerOptions],\n) {\n  let added = false;\n  if (value instanceof Array) {\n    if (value[0]) {\n      listeners.push({ fn: value[0], once: value[1].once, target });\n      added = true;\n    }\n  }\n  else if (value) {\n    listeners.push({ fn: value, target });\n    added = true;\n  }\n\n  if (added) {\n    target.addEventListener(\"destroy\", () => {\n      const i = listeners.findIndex(l => l.target === target);\n      if (i !== -1) {\n        swapRemove(listeners, i);\n      }\n    });\n  }\n}\n\nexport function addLocalEvent(\n  target: Element,\n  evName: EventName,\n  value: EventHandler | [EventHandler, AddEventListenerOptions],\n) {\n  if (value instanceof Array) {\n    target.addEventListener(evName, value[0], value[1]);\n  }\n  else {\n    target.addEventListener(evName, value);\n  }\n}\n\nfunction applyToNodes(node: Element | Element[], action: (n: Element) => void) {\n  if (node instanceof Array) {\n    node.forEach(action);\n  }\n  else {\n    action(node);\n  }\n}\n\nexport function conditionalRender(\n  anchor: Comment,\n  createNode: () => Element | Element[],\n  condition: () => boolean,\n) {\n  let node: Element | Element[];\n\n  anchor.addEventListener(\"destroy\", () => {\n    if (node) {\n      applyToNodes(node, destroyNode);\n    }\n    else {\n      cleanup(running);\n    }\n  });\n\n  const create = () => {\n    node = createNode();\n    applyToNodes(node, n => {\n      n.addEventListener(\"destroy\", () => {\n        cleanup(running);\n        anchor.remove();\n      });\n    });\n\n    return node;\n  };\n\n  const running = watchFn(condition, () => {\n    if (condition()) {\n      const n = node || (node = create());\n      if (n instanceof Array) {\n        anchor.replaceWith(...n);\n      }\n      else {\n        anchor.replaceWith(n);\n      }\n    }\n    else if (node) {\n      applyToNodes(node, n => n.replaceWith(anchor));\n    }\n  });\n\n  return condition() ? (node! || (node = create())) : anchor;\n}\n\nexport function setAttribute(node: Element, attr: string, value: unknown) {\n  if (value == null || value === false) {\n    node.removeAttribute(attr);\n  }\n  else {\n    node.setAttribute(attr, value as string);\n  }\n}\n\nexport function trackAttribute(node: Element, attr: string, value: () => unknown) {\n  let running: Running<unknown>;\n\n  if (attr === \"value\" || attr === \"checked\") {\n    running = watch(() => {\n      node[attr] = value();\n    });\n  }\n  else {\n    running = watch(() => {\n      setAttribute(node, attr, value());\n    });\n  }\n\n  node.addEventListener(\"destroy\", () => cleanup(running));\n}\n\nexport function trackClass(target: Element, className: string, value: () => boolean) {\n  const running = watch(() => {\n    if (!value()) {\n      target.classList.remove(className);\n    }\n    else {\n      target.classList.add(className);\n    }\n  });\n\n  target.addEventListener(\"destroy\", () => cleanup(running));\n}\n\ntype ToString = { toString(): string };\nexport function trackCssProperty(target: HTMLElement, rule: string, value: (() => ToString) | ToString) {\n  if (typeof value === \"function\") {\n    const running = watch(() => target.style.setProperty(rule, value()));\n    target.addEventListener(\"destroy\", () => cleanup(running));\n  }\n  else {\n    target.style.setProperty(rule, value.toString());\n  }\n}\n\nexport function insertChild(\n  anchor: Comment | HTMLSlotElement,\n  child: Node | (() => { toString(): string }) | number | string | unknown[],\n) {\n  if (anchor instanceof HTMLSlotElement && !child) {\n    anchor.replaceWith(...anchor.childNodes);\n    return anchor.children;\n  }\n  else if (typeof child === \"string\" || typeof child === \"number\") {\n    const textNode = document.createTextNode(\"\");\n    textNode.textContent = child.toString();\n    anchor.replaceWith(textNode);\n    return textNode;\n  }\n  else if (child instanceof Node) {\n    anchor.replaceWith(child);\n    return child;\n  }\n  else if (child instanceof Array) {\n    let next = anchor;\n    let a = anchor;\n    for (let i = 0; i < child.length; i++) {\n      if (i + 1 < child.length) {\n        next = document.createComment(\"\");\n        a.after(next);\n      }\n      insertChild(a, child[i] as Node);\n      a = next;\n    }\n    return child;\n  }\n  else {\n    const textNode = document.createTextNode(\"\");\n    anchor.replaceWith(textNode);\n    const running = watch(() => {\n      const c = child();\n      if (typeof c === \"string\") {\n        textNode.textContent = c;\n      }\n      else if (c != null) {\n        textNode.textContent = c.toString();\n      }\n      else if (c == null) {\n        textNode.textContent = \"\";\n      }\n    });\n    textNode.addEventListener(\"destroy\", () => cleanup(running));\n    return textNode;\n  }\n}\n\nexport function createTransition(\n  anchor: Comment,\n  createNode: () => Element,\n  cond: () => boolean,\n  name = \"jsx\",\n) {\n  let t: Element;\n  anchor.addEventListener(\"destroy\", () => {\n    if (t) {\n      destroyNode(t);\n    }\n    else {\n      cleanup(running);\n    }\n  });\n\n  const enterActive = () => `${name}-enter-active`;\n  const enterFrom = () => `${name}-enter-from`;\n  const enterTo = () => `${name}-enter-to`;\n\n  const leaveActive = () => `${name}-leave-active`;\n  const leaveFrom = () => `${name}-leave-from`;\n  const leaveTo = () => `${name}-leave-to`;\n\n  function nextFrame() {\n    return new Promise(res => {\n      requestAnimationFrame(() => requestAnimationFrame(res));\n    });\n  }\n\n  const create = () => {\n    t = createNode();\n\n    t.addEventListener(\"destroy\", () => {\n      cleanup(running);\n      anchor.remove();\n    });\n    t.addEventListener(\"transitionend\", () => {\n      removeClasses();\n\n      if (!cond()) {\n        t.replaceWith(anchor);\n      }\n    });\n\n    return t;\n  };\n  const target = () => (t || (t = create()));\n  let firstRun = true;\n  const running = watchFn(cond, async () => {\n    if (firstRun && !cond()) {\n      firstRun = false;\n      return;\n    }\n    firstRun = false;\n\n    if (target().classList.length) {\n      if (!cond() && (\n        target().classList.contains(enterFrom()) ||\n        target().classList.contains(enterActive()) ||\n        target().classList.contains(enterTo())\n      )) {\n        await nextFrame();\n        removeClasses();\n        target().replaceWith(anchor);\n      }\n      else if (cond() && (\n        target().classList.contains(leaveFrom()) ||\n        target().classList.contains(leaveTo()) ||\n        target().classList.contains(leaveActive())\n      )) {\n        await nextFrame();\n        removeClasses();\n        target().replaceWith(anchor);\n      }\n    }\n\n    if (cond()) {\n      if (target().isConnected) { return }\n      target().classList.add(enterFrom());\n      target().classList.add(enterActive());\n\n      anchor.replaceWith(target());\n      await nextFrame();\n\n      target().classList.remove(enterFrom());\n      target().classList.add(enterTo());\n    }\n    else if (target().isConnected) {\n      target().classList.add(leaveFrom());\n      target().classList.add(leaveActive());\n\n      await nextFrame();\n\n      target().classList.remove(leaveFrom());\n      target().classList.add(leaveTo());\n    }\n  });\n\n  function removeClasses() {\n    target().classList.remove(enterActive());\n    target().classList.remove(enterFrom());\n    target().classList.remove(enterTo());\n\n    target().classList.remove(leaveActive());\n    target().classList.remove(leaveFrom());\n    target().classList.remove(leaveTo());\n  }\n\n  return cond() ? target() : anchor;\n}\n"],
  "mappings": "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",
  "names": ["node"]
}
