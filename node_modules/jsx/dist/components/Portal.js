import { destroyNode } from "../jsx.js";
import { watch } from "../signals.js";
function Portal(props, slots) {
  const parent = () => {
    if (!props.to) {
      props.$ref = document.body;
    } else if (props.to instanceof Element) {
      props.$ref = props.to;
    } else {
      props.$ref = document.querySelector(props.to) || document.body;
    }
    return props.$ref;
  };
  const anchor = document.createComment("");
  const children = slots.default?.();
  queueMicrotask(() => {
    anchor.addEventListener("destroy", () => {
      children.forEach(destroyNode);
      anchor.remove();
    });
  });
  watch(() => {
    parent().append(...children);
  });
  return anchor;
}
export {
  Portal as default
};
//# sourceMappingURL=Portal.js.map
