{
  "version": 3,
  "sources": ["../../js/components/FixedFor.tsx"],
  "sourcesContent": ["import { isReactiveObject, reactive, ref, watch } from \"~/signals\";\n\ntype ForProps<T> = {\n  each: T[],\n  do: (item: () => T, i: number) => JSX.Element,\n};\n\n/**\n * A component that renders a list of JSX elements from a fixed-size array of reactive items.\n *\n * This component takes a fixed-size array of objects and a render function, converts each object\n * in the array into a reactive object, and then uses the render function to generate\n * JSX elements for each item.\n *\n * @note If you need to render a dynamically-sized array use <For> instead.\n */\nexport default function FixedFor<T>(props: ForProps<T>): JSX.Element {\n  return props.each.map((_, i) => {\n    const [item, setItem] = ref(props.each[i]);\n\n    const currentItem = item();\n    if (currentItem && typeof currentItem === \"object\" && !isReactiveObject(currentItem)) {\n      reactive(currentItem);\n    }\n\n    watch(() => {\n      const newItem = props.each[i];\n      if (item() !== newItem) {\n        setItem(newItem);\n      }\n    });\n\n    return props.do(item, i);\n  }) as unknown as JSX.Element;\n}\n"],
  "mappings": "AAAA,SAAS,kBAAkB,UAAU,KAAK,aAAa;AAgBxC,SAAR,SAA6B,OAAiC;AACnE,SAAO,MAAM,KAAK,IAAI,CAAC,GAAG,MAAM;AAC9B,UAAM,CAAC,MAAM,OAAO,IAAI,IAAI,MAAM,KAAK,CAAC,CAAC;AAEzC,UAAM,cAAc,KAAK;AACzB,QAAI,eAAe,OAAO,gBAAgB,YAAY,CAAC,iBAAiB,WAAW,GAAG;AACpF,eAAS,WAAW;AAAA,IACtB;AAEA,UAAM,MAAM;AACV,YAAM,UAAU,MAAM,KAAK,CAAC;AAC5B,UAAI,KAAK,MAAM,SAAS;AACtB,gBAAQ,OAAO;AAAA,MACjB;AAAA,IACF,CAAC;AAED,WAAO,MAAM,GAAG,MAAM,CAAC;AAAA,EACzB,CAAC;AACH;",
  "names": []
}
