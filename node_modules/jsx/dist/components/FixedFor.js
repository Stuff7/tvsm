import { isReactiveObject, reactive, ref, watch } from "../signals.js";
function FixedFor(props) {
  return props.each.map((_, i) => {
    const [item, setItem] = ref(props.each[i]);
    const currentItem = item();
    if (currentItem && typeof currentItem === "object" && !isReactiveObject(currentItem)) {
      reactive(currentItem);
    }
    watch(() => {
      const newItem = props.each[i];
      if (item() !== newItem) {
        setItem(newItem);
      }
    });
    return props.do(item, i);
  });
}
export {
  FixedFor as default
};
//# sourceMappingURL=FixedFor.js.map
